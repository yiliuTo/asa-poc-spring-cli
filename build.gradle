plugins {
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.gorylenko.gradle-git-properties' version '2.3.2'
	id 'org.graalvm.buildtools.native' version '0.9.19'
}

group = 'org.springframework.experimental'
sourceCompatibility = '17'

repositories {
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/release' }
	mavenCentral()
}

ext {
	set('springShellVersion', '3.0.1-SNAPSHOT')
	set('initializrVersion', '0.11.1')
	set('jarchivelibVersion', '1.2.0')
	set('kohsukeVersion', '1.301')
	set('gitlab4jVersion', '4.19.0')
	set('openrewriteVersion', '7.34.3')
	set('antVersion', '1.10.9')
	set('mavenModelVersion', '3.5.4')
	set('tikaVersion', '1.18')
	set('jimfsVersion', '1.2')
	set('systemStubsVersion', '2.0.1')
	set('handlebarsVersion', '4.1.2')
	set('jsonpathVersion', '2.7.0')
	set('jaxbApiVersion', '2.3.1')
	set('jaxbRuntimeVersion', '2.3.3')
	set('resourceManagerVersion', '2.24.0')
	set('azureBomVersion', '1.2.10')
}

configurations.all {
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation "org.springframework.shell:spring-shell-starter-jna"
	implementation 'io.spring.initializr:initializr-generator'
	implementation 'io.projectreactor.addons:reactor-extra'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
	implementation 'org.rauschig:jarchivelib'
	implementation 'org.kohsuke:github-api'
	implementation 'org.gitlab4j:gitlab4j-api'
	implementation 'org.openrewrite:rewrite-java-17'
	implementation 'org.openrewrite:rewrite-maven'
	implementation 'org.openrewrite:rewrite-xml'
	implementation 'org.apache.ant:ant'
	implementation 'org.apache.maven:maven-model'
	implementation 'org.apache.tika:tika-core'
	implementation 'com.github.jknack:handlebars'
	implementation 'com.github.jknack:handlebars-humanize'
	implementation 'com.jayway.jsonpath:json-path'
	implementation 'javax.xml.bind:jaxb-api'
	implementation 'org.glassfish.jaxb:jaxb-runtime'
	implementation 'com.azure.resourcemanager:azure-resourcemanager-appplatform'
	implementation 'com.azure.resourcemanager:azure-resourcemanager'
	implementation 'com.azure:azure-identity'
	testImplementation 'org.openrewrite:rewrite-test'
	testImplementation 'uk.org.webcompere:system-stubs-jupiter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.google.jimfs:jimfs'
	testImplementation 'com.squareup.okhttp3:mockwebserver'
}

dependencyManagement {
	dependencies {
		dependency "org.springframework.shell:spring-shell-starter-jna:${springShellVersion}"
		dependency "org.rauschig:jarchivelib:${jarchivelibVersion}"
		dependency "org.kohsuke:github-api:${kohsukeVersion}"
		dependency "org.gitlab4j:gitlab4j-api:${gitlab4jVersion}"
		dependency "org.openrewrite:rewrite-test:${openrewriteVersion}"
		dependency "org.openrewrite:rewrite-java-17:${openrewriteVersion}"
		dependency "org.openrewrite:rewrite-xml:${openrewriteVersion}"
		dependency("org.openrewrite:rewrite-maven:${openrewriteVersion}") {
			exclude 'org.slf4j:jcl-over-slf4j'
		}
		dependency "org.apache.ant:ant:${antVersion}"
		dependency "org.apache.maven:maven-model:${mavenModelVersion}"
		dependency "org.apache.tika:tika-core:${tikaVersion}"
		dependency "com.github.jknack:handlebars:${handlebarsVersion}"
		dependency "com.github.jknack:handlebars-humanize:${handlebarsVersion}"
		dependency "com.jayway.jsonpath:json-path:${jsonpathVersion}"
		dependency "com.google.jimfs:jimfs:${jimfsVersion}"
		dependency "uk.org.webcompere:system-stubs-jupiter:${systemStubsVersion}"
		dependency "javax.xml.bind:jaxb-api:${jaxbApiVersion}"
		dependency "org.glassfish.jaxb:jaxb-runtime:${jaxbRuntimeVersion}"
		dependency "com.azure.resourcemanager:azure-resourcemanager-appplatform:${resourceManagerVersion}"
		dependency "com.azure.resourcemanager:azure-resourcemanager:${resourceManagerVersion}"
	}
	imports {
		mavenBom "org.springframework.shell:spring-shell-dependencies:${springShellVersion}"
		mavenBom "io.spring.initializr:initializr-bom:${initializrVersion}"
		mavenBom "com.azure:azure-sdk-bom:${azureBomVersion}"
	}
}

test {
	useJUnitPlatform()
}

springBoot {
	buildInfo()
}

graalvmNative {
	binaries {
		main {
			imageName = 'spring'
		}
	}
	metadataRepository {
		enabled = true
	}
}

task milestoneVersion {
	doLast{
		def postfix = project.getProperty('springCliMilestone')
		if (!(postfix ==~ /(?:M|RC)\d+/)) {
			throw new GradleException('Illegal milestone version')
		}
		def properties = new Properties()
		def file = new File('gradle.properties')
		properties.load(file.newDataInputStream())
		def currentVersion = properties.getProperty('version')
		if (currentVersion.indexOf('-SNAPSHOT') > 0) {
			def nextVersion = currentVersion - '-SNAPSHOT' + '-' + postfix
			properties.setProperty('version', nextVersion)
			properties.store(file.newWriter(), null)
		} else {
			throw new GradleException('Version is not a SNAPSHOT version')
		}
	}
}
